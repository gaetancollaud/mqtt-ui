name: Build

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MAVEN_OPTS: -Xmx4g
      DOCKER_BUILDKIT: 1

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Prepare Image Build
        id: prep_image
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.actor }}/mqtt-ui
          TAG="${DOCKER_IMAGE}:latest"

          # Set output parameters.
          echo ::set-output name=tags::${TAG}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'graalvm'
          cache: maven

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Build with Maven
        run: mvn --batch-mode clean package -DskipTests

      - name: Build native
        run: mvn --batch-mode package -DskipTests -Pnative

      - name: Set up Docker Buildx
        if: github.event_name != 'pull_request'
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Log in to the GitHub Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v3
        if: github.event_name != 'pull_request'
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64
          file: src/main/docker/Dockerfile.native-micro
          push: true
          tags: ${{ steps.prep_image.outputs.tags }}

